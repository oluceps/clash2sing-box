name: build
on: 
  push:
    branches: 
      - main
jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
          override: true

      - name: cargo fmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  test:
    name: Test
    needs: [style]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [stable, beta, nightly]
        include:
          - build: beta
            rust: beta
          - build: nightly
            rust: nightly
            benches: true

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: cachix/install-nix-action@v19

      - run: |
          nix develop

      - name: Build debug
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.features }}

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ matrix.features }}

      # - name: Test all benches
      #   if: matrix.benches
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: test
      #     args: --benches ${{ matrix.features }}
  deploy:
    name: deploy
    needs: [test]
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl, x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Nix
        uses: cachix/install-nix-action@v19

      - run: |
          nix develop
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../clash2sing-box-${{ matrix.target }}.tar.gz testmest
          cd -



      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          files: |
            clash2sing-box*